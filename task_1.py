"""
1.	Пользователь вводит данные о количестве предприятий, их наименования и прибыль
за 4 квартала (т.е. 4 отдельных числа) для каждого предприятия.
Программа должна определить среднюю прибыль (за год для всех предприятий)
и вывести наименования предприятий, чья прибыль выше среднего и отдельно
вывести наименования предприятий, чья прибыль ниже среднего.

Подсказка:
Для решения задачи обязательно примените какую-нибудь коллекцию из модуля collections.

Пример:
Введите количество предприятий для расчета прибыли: 2
Введите название предприятия: Фирма_1
через пробел введите прибыль данного предприятия
за каждый квартал(Всего 4 квартала): 235 345634 55 235

Введите название предприятия: Фирма_2
через пробел введите прибыль данного предприятия
за каждый квартал(Всего 4 квартала): 345 34 543 34

Средняя годовая прибыль всех предприятий: 173557.5
Предприятия, с прибылью выше среднего значения: Фирма_1

Предприятия, с прибылью ниже среднего значения: Фирма_2
"""
from collections import namedtuple


def calculation():
    company_count = int(input('Введите количество предприятий для расчета прибыли: '))
    TOTAL = namedtuple('income', 'company annual_income')
    income_dict = {}

    for i in range(company_count):
        data = TOTAL(
            company=input('Введите название предприятия: '),
            annual_income=list(map(lambda x: float(x),
                                   input('Через пробел введите прибыль данного предприятия за каждый квартал: ').split()
                                   )))

        income_dict[data.company] = sum(data.annual_income)

    # Среднегодовая прибыль
    total_income = 0
    for val in income_dict.values():
        total_income += val
    profit = total_income / company_count
    print(f'Среднегодовая прибыль всех предприятий: {profit}')

    for key, val in income_dict.items():
        if val <= profit:
            print(f'Предприятия, с прибылью ниже среднего значения: {key}')
        else:
            print(f'Предприятия, с прибылью выше среднего значения: {key}')


calculation()
